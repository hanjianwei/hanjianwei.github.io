<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Stone Horse</title><link>https://hanjianwei.com/</link><description>Recent content on Stone Horse</description><generator>Hugo -- gohugo.io</generator><language>en</language><managingEditor>blog@hanjianwei.com (Jianwei Han)</managingEditor><webMaster>blog@hanjianwei.com (Jianwei Han)</webMaster><lastBuildDate>Wed, 18 Mar 2020 11:04:19 +0800</lastBuildDate><atom:link href="https://hanjianwei.com/index.xml" rel="self" type="application/rss+xml"/><item><title>40%键盘YDPM40</title><link>https://hanjianwei.com/2020/03/18/ydpm40-keyboard/</link><pubDate>Wed, 18 Mar 2020 11:04:19 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2020/03/18/ydpm40-keyboard/</guid><description>最近看到有人晒的Planck EZ，对40%键盘非常心动，不过Planck EZ的价格还是太高了，于是在咸鱼上入了一把YDPM40。YDPM40是YANG设计的，分为YDP40和YDM40两种布局，前者是类似于Planck的直排，而后者更接近于一般键盘的斜排。我买的这把是YDM40，共44个键，非常适合极简主义者以及囊中羞</description></item><item><title>网件WNDR4300上安装配置OpenWrt</title><link>https://hanjianwei.com/2015/12/02/openwrt-setup/</link><pubDate>Wed, 02 Dec 2015 20:04:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2015/12/02/openwrt-setup/</guid><description>WNDR4300是对OpenWrt支持比较好的一款路由器：其内存和闪存都是128M，有比较好的ROM支持，是一个比较适合折腾的路由器。 OpenWrt的安装、配置 首先，下载WNDR4300的固件，OpenWrt的下载页面列出了不同版本的的固件，一般来说下载最新的release即可。 比如当前支持WNDR4300的最新固件是</description></item><item><title>SmartOS折腾笔记</title><link>https://hanjianwei.com/2015/07/08/smartos-nas/</link><pubDate>Wed, 08 Jul 2015 20:04:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2015/07/08/smartos-nas/</guid><description>前段时间入手了一台Gen8，准备用做家里文件、媒体服务器。看了EXSi、FreeNAS、NAS4Free、Proxmox等方案后，觉得还是SmartOS最好。它支持ZFS，能够更好管理数据、保证数据有效性；此外，它支持kvm虚拟化技术，能够虚拟常见的操作系统，满足各种软件需求；它还支持类似Docker的Zones容器技</description></item><item><title>备份Mac AppStore中安装的应用</title><link>https://hanjianwei.com/2015/02/16/backup-mac-appstore-apps/</link><pubDate>Mon, 16 Feb 2015 20:04:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2015/02/16/backup-mac-appstore-apps/</guid><description>在Mac中安装软件并不像Linux那么方便，它没有一个统一的软件管理器来处理大部分的情况。我同时用了Homebrew、Homebrew Cask和Mac AppStore来安装不同的软件。前者主要用于安装命令行程序，而后两者用于安装GUI程序。有些软件在Cask和AppStore中都有，以前我都是倾向于使用Cask，主要是</description></item><item><title>Nix: 纯函数式包管理器</title><link>https://hanjianwei.com/2014/09/21/nix-the-purely-functional-package-manager/</link><pubDate>Sun, 21 Sep 2014 20:04:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2014/09/21/nix-the-purely-functional-package-manager/</guid><description>Nix是一个Linux/Unix下的包管理器，它支持原子升级和回滚、能够同时安装同一个包的多个版本、支持多用户，能够更加简单地搭建开发、构建环境。它最大的卖点在于 函数式 的管理方式：把软件包作为函数式语言的值，这些值由没有副作用的函数构建，一旦构建完就不再改变，这意味着你的软件运行环境一旦构建就不会改变——这对于可重现的</description></item><item><title>Webpack: 为Web开发而生的模块管理器</title><link>https://hanjianwei.com/2014/09/10/webpack-package-manager-for-web/</link><pubDate>Wed, 10 Sep 2014 20:04:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2014/09/10/webpack-package-manager-for-web/</guid><description>对于开发人员而言，好的包管理器可以让工作事半功倍。现在流行的编程语言大多有自己的包管理系统。近年来，Web开发越来越火，其开发工具也随之越来越好用了，而Webpack就是一款专为Web开发设计的包管理器。它能够很好地管理、打包Web开发中所用到的HTML、Javascript、CSS以及各种静态文件（图片、字体等），让</description></item><item><title>阿里云服务器的Docker配置</title><link>https://hanjianwei.com/2014/07/30/docker-on-aliyun/</link><pubDate>Wed, 30 Jul 2014 20:04:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2014/07/30/docker-on-aliyun/</guid><description>最近把程序放到阿里云服务器上，并尝试用Docker来部署。阿里云的镜像列表里面已经有了Ubuntu 14.04 64位，可以直接安装Docker。然而，由于阿里云服务器的特殊情况，需要进行配置才能用。 安装完Docker之后，发现Docker服务并没有起来，检查日志发现有这么一段： [/var/lib/docker|3c476c9d] -job init_networkdriver() = ERR (1) Could not find a free IP address range for interface &amp;#39;docker0&amp;#39;. Please configure its address manually and run &amp;#39;docker -b</description></item><item><title>一袋烟功夫构建Mac环境</title><link>https://hanjianwei.com/2014/07/15/1-click-building-your-mac-environment/</link><pubDate>Tue, 15 Jul 2014 10:23:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2014/07/15/1-click-building-your-mac-environment/</guid><description>最近硬盘不幸挂掉，换了新硬盘后重装系统、搭建环境真是一个痛苦的过程。尤其是后者，各种软件的配置、开发环境的设定，非常繁琐。这里索性总结一下，怎么能够将开发、应用的环境配置系统化，使得更换系统时能够迅速重建原来的环境。这里虽然是针对Mac来说的，对于Linux应该也类似。 作为一个开发者用户，我关心的数据主要有以下几类： 代</description></item><item><title>走马观花看Puppet</title><link>https://hanjianwei.com/2014/07/14/master-of-puppets/</link><pubDate>Mon, 14 Jul 2014 16:18:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2014/07/14/master-of-puppets/</guid><description>Puppet是目前最流行的一套配置管理(Configuration Management，简称CM)系统。它提供了一套简洁、强大的框架，使系统管理的重用、分享更加简单，让系统配置更加自动化。在云计算时代，动辄需要配置大量主机，它的作用更加明显。 Puppet使用一种声明式的语言，和传统的脚本相比，你只需指定目标，而不必关注</description></item><item><title>Docker on Mac</title><link>https://hanjianwei.com/2014/06/06/docker-on-mac/</link><pubDate>Fri, 06 Jun 2014 15:58:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2014/06/06/docker-on-mac/</guid><description>在虚拟化领域，Docker是一颗冉冉升起的新星。它构建于LXC之上，比传统的虚拟机技术相比，它没有操作系统层，因此更加轻量化，灵活性和可移植性也更好。 Docker有两个主要的部件：daemon和作为客户端的二进制程序「docker」。docker作为客户端，把相应指令发送给daemon来执行。因为Docker使用了Li</description></item><item><title>混乱的标点符号</title><link>https://hanjianwei.com/2013/07/26/punctuation/</link><pubDate>Fri, 26 Jul 2013 10:33:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2013/07/26/punctuation/</guid><description>打开你经常上的几个网站，翻开你正在看的书，拿起你身边商品的包装，仔细观察一下其中的标点，有没有被用法各异的标点所困扰？中、英文之间的差异，输入法之间的差异，排版软件处理细节的不同，让标点符号变得异常混乱。 引号、撇号、上标符 首先是「引号」及其面目相似的兄弟们： 符号 Unicode 名称 HTML ' U+0027 单直引号 &amp;amp;apos; &amp;quot; U+0022 双直引号 &amp;amp;quot; ‘ U+2018 单开弯引号 &amp;amp;lsquo; ’ U+2019 单</description></item><item><title>Python的方法解析顺序(MRO)</title><link>https://hanjianwei.com/2013/07/25/python-mro/</link><pubDate>Thu, 25 Jul 2013 20:34:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2013/07/25/python-mro/</guid><description>对于支持继承的编程语言来说，其方法（属性）可能定义在当前类，也可能来自于基类，所以在方法调用时就需要对当前类和基类进行搜索以确定方法所在的位置。而搜索的顺序就是所谓的「方法解析顺序」（Method Resolution Order，或MRO）。对于只支持单继承的语言来说，MRO 一般比较简单；而对于 Python 这种支持多继承的语言来说，MRO 就复杂很多</description></item><item><title>Markdown 的 Ansi 显示</title><link>https://hanjianwei.com/2013/04/06/markdown-to-ansi/</link><pubDate>Sat, 06 Apr 2013 20:42:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2013/04/06/markdown-to-ansi/</guid><description>随着 Jekyll、Octopres、Docpad 等一批静态博客生成器的兴起，Markdown 已经成为写博客的利器。不过，有时候想把博客上的文章直接贴到 BBS 上还是需要去做一些转换，把格式转换为 ANSI 颜色控制符。 原因主要有二： 直接复制网页有些链接就只有文字没有 URL，同时代码高亮之类的就没了。 直接粘贴 Markdown 会引入一些不必要的字符（比</description></item><item><title>C++11 和 C++98 的 ABI 兼容性</title><link>https://hanjianwei.com/2013/01/27/abi-compatibility-between-c-plus-plus-11-and-c-plus-plus-98/</link><pubDate>Sun, 27 Jan 2013 21:38:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2013/01/27/abi-compatibility-between-c-plus-plus-11-and-c-plus-plus-98/</guid><description>C++11 出来已经好几年了，对其中有些特性还是很感兴趣的，比如 rvalue reference、lambda、alias templates、range-based for 等，正好最近在写 C++ 的代码，就准备尝试一下。 Mac OS X 下面主要的编译器是 Clang，对于 C++11 的支持还是很不错的。 不过 Clang 默认是用的还是 C++98 的标准，要支持 C++11 必须使用两个选项： -std=c++11: 使用 C++11 的标准进</description></item><item><title>DocPad：基于 CoffeeScript 的静态网站生成器</title><link>https://hanjianwei.com/2013/01/06/docpad-static-site-generator-using-coffeescript/</link><pubDate>Sun, 06 Jan 2013 21:40:00 +0800</pubDate><author>blog@hanjianwei.com (Jianwei Han)</author><guid>https://hanjianwei.com/2013/01/06/docpad-static-site-generator-using-coffeescript/</guid><description>DocPad 是一个静态网站生成器，同 Jekyll、Octopress 相比，它的可定制性更强； 由于是用 CoffeeScript 写的，速度也比以上两个快很多。最近两天玩了一下，感觉很不错：功能很强大，虽然有些插件不太稳定，但基本功能已经比较完备了。 几个有意思的插件： marked 和 highlight.js：Markdown 支持。highlight.js 是基于 Javascript 的代码</description></item></channel></rss>